(()=>{"use strict";class e{constructor(e,t,s,i,r,n){this._infoCard=e,this._name=e.name,this._link=e.link,this._templateCard=t,this._pic=e,this._handleCardClick=s,this._openF=i,this._likes=e.likes,this._ownerId=this._infoCard.ownerId,this._userLiked=this._likes.some((e=>e._id===this._ownerId)),this._cardId=e._id,this._sendLikeApi=r,this._deleteLikeApi=n}createCard(){return this._card=this._templateCard.content.firstElementChild.cloneNode(!0),this._card.querySelector(".element__pic").src=this._link,this._card.querySelector(".element__title-text").textContent=this._name,this._card.querySelector(".element__pic").alt=this._name,this._likeBtn=this._card.querySelector(".element__title-like"),this._likeNum=this._card.querySelector(".element__title-like-num"),this._likeNum.textContent=this._likes.length,this._isUserOwner()||this._card.querySelector(".element__bin").remove(),this._userLiked&&this._likeBtn.classList.add("element__title-like_active"),this._addListeners(),this._card}_isCardLiked(){this._userLiked=this._likes.some((e=>e._id===this._ownerId))}_isUserOwner(){if(this._infoCard.owner._id===this._ownerId)return!0}_addListeners(){this._likeBtn.addEventListener("click",(()=>{this._userLiked?this._deleteLikeApi(this._infoCard):this._sendLikeApi(this._infoCard)})),this._isUserOwner()&&this._card.querySelector(".element__bin").addEventListener("click",(()=>this._openF(this._infoCard,this._card))),this._card.querySelector(".element__pic").addEventListener("click",(()=>{this._handleCardClick(this._pic)}))}handlerLike(e){this._likeBtn.classList.toggle("element__title-like_active"),this._likeNum.textContent=e.likes.length,this._userLiked=!this._userLiked}removeCard(){this._card.remove(),this._card=null}sendLikeApi(e){this._sendLikeApi=e}deleteLikeApi(e){this._deleteLikeApi=e}}class t{constructor(e,t){this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._popupForm=t,this._inputList=Array.from(this._popupForm.querySelectorAll(this._inputSelector)),this._saveBtn=this._popupForm.querySelector(this._submitButtonSelector)}_isValid(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_showInputError(e){const t=this._popupForm.querySelector(`.${e.id}-error`);t.textContent=e.validationMessage,t.classList.add(this._errorClass),e.classList.add(this._inputErrorClass)}_hideInputError(e){const t=this._popupForm.querySelector(`.${e.id}-error`);t.classList.remove(this._errorClass),t.textContent="",e.classList.remove(this._inputErrorClass)}_setEventListeners(){this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._isValid(e),this._toggleButtonState()}))}))}enableValidation(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}disableButton(){this._saveBtn.classList.add(this._inactiveButtonClass),this._saveBtn.disabled=!0}_enableButton(){this._saveBtn.classList.remove(this._inactiveButtonClass),this._saveBtn.disabled=!1}_toggleButtonState(){this._hasInputsValid()?this.disableButton():this._enableButton()}_hasInputsValid(){return this._inputList.some((e=>!e.validity.valid))}resetTextError(){this._inputList.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){this._popup=document.querySelector(e),this._closeBtn=this._popup.querySelector(".popup__close-button"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_closePressOverlay(e){e.currentTarget===e.target&&this.close()}setEventListeners(){this._closeBtn.addEventListener("click",(()=>this.close())),this._popup.addEventListener("mousedown",(e=>this._closePressOverlay(e)))}}class i extends s{constructor(e,t){super(e),this._inputsList=this._popup.querySelectorAll(".popup__input"),this._form=this._popup.querySelector(".popup__form"),this._apiCallBack=t,this._submitBtn=this._popup.querySelector(".popup__save-button")}_getInputValues(){return this._data={},this._inputsList.forEach((e=>{this._data[e.name]=e.value})),this._data}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",this.submitHandler)}close(){super.close(),this._form.reset()}submitHandler=()=>{const e=this._getInputValues();this._apiCallBack(e)};loadingInProcess(){this._submitBtn.textContent="Сохранение..."}loadingDone(e){this._submitBtn.textContent=e}}const r=document.querySelector(".popup__form-profile"),n=document.querySelector(".popup__form-place"),o=document.querySelector(".popup__form-avatar"),a=document.querySelector("#element-template"),l={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_inactive",inputErrorClass:"popup__form_type_error",errorClass:"popup__error-text_status_active"},c=document.querySelector(".profile__edit-button"),_=document.querySelector(".profile__add-button"),h=document.querySelector(".profile__avatar-edit"),d=document.querySelector(".popup__input_field_name"),u=document.querySelector(".popup__input_field_occupation");let p;const m=new t(l,r),v=new t(l,n),k=new t(l,o),L=new class{constructor({baseUrl:e,headers:t}){this._url=e,this._headers=t}getInfo(){return fetch(`${this._url}users/me`,{method:"GET",headers:this._headers}).then(this._checkResponse)}getCards(){return fetch(`${this._url}cards`,{method:"GET",headers:this._headers}).then(this._checkResponse)}sendNewProfileData(e){return fetch(`${this._url}users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}sendNewCardData(e){return fetch(`${this._url}cards`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._url}cards/${e._id}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}changeAvatar(e){return fetch(`${this._url}users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify(e)}).then(this._checkResponse)}sendLike(e){return fetch(`${this._url}cards/${e._id}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}deleteLike(e){return fetch(`${this._url}cards/${e._id}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-41/",headers:{authorization:"6f7d4ee2-1133-493f-8dc5-cde7a586dd12","Content-Type":"application/json"}});Promise.all([L.getInfo(),L.getCards()]).then((e=>{const t=e[0],s=e[1];p=t._id,s.forEach((e=>{e.ownerId=t._id})),B.rendererCards(s),C.setUserInfo(t),C.setUserAvatar(t),function(){const e=document.querySelector(".preloader");e.classList.add("preloader_status_hiding"),setTimeout((function(){e.classList.add("preloader_status_hidden"),e.classList.remove("preloader_status_hiding")}),500)}()})).catch((e=>console.log(e)));const f=new class extends s{constructor(e){super(e),this._submit=this._popup.querySelector(".popup__save-button")}setSubmitAction(e){this._handleSubmitCallback=e}setEventListeners(){super.setEventListeners()}close(){super.close(),this._submit.removeEventListener("click",this._handleSubmitCallback)}submit(){this._submit.addEventListener("click",this._handleSubmitCallback)}loadingInProcess(){this._submit.textContent="Удаление..."}loadingDone(){this._submit.textContent="Да"}disableSubmitBtn(){this._submit.disabled=!0}enableSubmitBtn(){this._submit.disabled=!1}}(".popup_type_delete-confirm");f.setEventListeners();const b=new i(".popup_type_avatar-edit",(function(e){b.loadingInProcess(),L.changeAvatar(e).then((e=>{C.setUserAvatar(e),b.close()})).catch((e=>console.log(e))).finally((()=>b.loadingDone("Сохранить")))}));b.setEventListeners();const C=new class{constructor({nameSelector:e,occupationSelector:t,avatarSelector:s}){this._name=document.querySelector(e),this._occupation=document.querySelector(t),this._avatar=document.querySelector(s)}getUserInfo(){return{name:this._name.textContent,about:this._occupation.textContent}}setUserInfo(e){this._name.textContent=e.name,this._occupation.textContent=e.about}setUserAvatar(e){this._avatar.src=e.avatar}}({nameSelector:".profile__title",occupationSelector:".profile__subtitle",avatarSelector:".profile__avatar"}),S=new i(".popup_type_profile-edit",(function(e){S.loadingInProcess(),L.sendNewProfileData(e).then((e=>{C.setUserInfo(e),S.close()})).catch((e=>console.log(e))).finally((()=>S.loadingDone("Сохранить")))}));S.setEventListeners();const E=new i(".popup_type_new-card",(function(e){E.loadingInProcess(),L.sendNewCardData(e).then((e=>{e.ownerId=p,B.addItem(w(e)),E.close()})).catch((e=>console.log(e))).finally((()=>E.loadingDone("Сохранить")))}));function y(e,t){f.setSubmitAction((()=>{f.loadingInProcess(),f.disableSubmitBtn(),L.deleteCard(e,t).then((()=>{t.remove(),t=null,f.close()})).catch((e=>console.log(e))).finally((()=>f.loadingDone("Да")))})),f.enableSubmitBtn(),f.open(),f.submit()}E.setEventListeners();const g=new class extends s{constructor(e){super(e),this._image=this._popup.querySelector(".popup__img"),this._caption=this._popup.querySelector(".popup__img-title")}open(e){super.open(),this._caption.textContent=e.name,this._image.src=e.link,this._image.alt=e.name}}(".popup_type_view-image");g.setEventListeners();const B=new class{constructor(e,t){this._renderer=e,this._container=document.querySelector(t)}rendererCards(e){e.reverse().forEach((e=>(this.addItem(this._renderer(e)),e)))}addItem(e){this._container.prepend(e)}}(w,".elements");function q(e){g.open(e)}function w(t){const s=((...t)=>new e(...t))(t,a,q,y);return s.sendLikeApi((()=>{L.sendLike(t).then((e=>{s.handlerLike(e)})).catch((e=>console.log(e)))})),s.deleteLikeApi((()=>{L.deleteLike(t).then((e=>{s.handlerLike(e)})).catch((e=>console.log(e)))})),s.createCard()}c.addEventListener("click",(()=>{const e=C.getUserInfo();d.value=e.name,u.value=e.about,S.open(),m.resetTextError()})),h.addEventListener("click",(()=>{b.open(),b.loadingDone("Сохранить"),k.resetTextError()})),_.addEventListener("click",(()=>{E.open(),v.resetTextError()})),m.enableValidation(),v.enableValidation(),k.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,